% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gwplotting.R
\docType{package}
\name{gwplotting}
\alias{gwplotting}
\alias{gwplotting-package}
\title{gwplotting: A package to simplify plotting genome-wide statistics}
\description{
This package contains a set of small functions that perform three main tasks: \cr
-Loading files in common data formats \cr
-Reordering constituent scaffolds according to chromosome assignments or
lengths \cr
-Plotting common statistics \cr
}
\section{Required Packages}{


This package utilizes a variety of functions from Hadley Wickham's tidyverse
package. Update your R and RStudio to the latest versions, then install the
latest version of tidyverse.
}

\section{Common Format}{


I have tried to make each loading function return a standard format tibble,
containing four columns with the following headers: \cr
  scaf - scaffold name \cr
  ps   - the position on the scaffold (this may be a single site, or the start
         or midpoint of a window) \cr
  stat - the statistic value at that position. \cr
  chr  - the chromosome (this is initialized with a unique number for each
         scaffold for most of the load functions, but is replaced when doing
         the actual reordering)
}

\section{Loading Functions}{


As of Feb 2019, I have written in the following loading functions. Except
where noted, they output the Common Format described above. See their help
messages for more detail. The function names are fairly explanatory. \cr
\cr
load_gemma_gwas \cr
load_vcftools_stats \cr
load_plink_gwas \cr
load_abbababa \cr
}

\section{Reordering Functions}{

There are two ways I usually reorder scaffolds: by length or by assignments
to another species' chromosomes. See these function help messages for more
details. \cr
\cr
reorder_scaffolds \cr
reorder_by_scaf_len \cr
get_cumulative_positions \cr
}

\section{Plotting Functions}{

There is one main function, but I will add as I go. This function wraps in
get_cumulative_positions before plotting. \cr
\cr
plot_genomewide_data \cr
plot_region_data \cr
}

\section{Linkage Disequilibrium Functions}{

There are various things that you can do with LD measurements. \cr

load_plink_ld \cr
calculate_ld_decay \cr
calculate_windowed_ld \cr

}

\section{Example}{

x <- load_gemma_gwas( 'file.assoc.txt.gz', pval = 'p_wald' ) \cr
y <- reorder_by_scaf_len( x, 'scaffolds.chromSizes' ) \cr
z <- plot_genomewide_data( y, type = 'gwas', 'scaffolds.chromSizes',
     plotting_column = 'stat' ) \cr
tiff( 'myplot.tiff', width = 4, height = 2, units = 'in', res = 600 ) \cr
z \cr
dev.off() \cr
}

